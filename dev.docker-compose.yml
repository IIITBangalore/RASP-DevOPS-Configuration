services:
  keycloakdb:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_db_user
      POSTGRES_PASSWORD: keycloak_db_user_password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak_db_user -d keycloak_db" ]
      interval: 3s # check every 3s
      timeout: 2s # give each check 2s to respond
      retries: 5 # fail only after 5 failed checks
      start_period: 5s # initial delay before healthcheck starts
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev --import-realm
    ports:
      - "9080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak_db
      KC_DB_USERNAME: keycloak_db_user
      KC_DB_PASSWORD: keycloak_db_user_password
      # KC_HEALTH_ENABLED: true
    depends_on:
      keycloakdb:
        condition: service_healthy
    volumes:
      - ./dev_keycloak_realm_data:/opt/keycloak/data/import
    # healthcheck:
    #   test: [
    #       "CMD-SHELL",
    #       "exec 3<>/dev/tcp/127.0.0.1/9000 && echo -e 'GET /health/ready HTTP/1.1\r

    #       Host: localhost\r

    #       Connection: close\r

    #       \r

    #       ' >&3 && grep '200' <&3",
    #     ]
    #   interval: 10s
    #   timeout: 3s
    #   retries: 7
    #   start_period: 60s # initial delay before healthcheck starts
    restart: unless-stopped

  mysql:
    image: mysql:latest
    container_name: mysql
    # ports:
    #   - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: visual_app_design
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -proot || exit 1" ]
      interval: 3s
      timeout: 2s
      retries: 5
      start_period: 5s
    restart: unless-stopped

  mongo:
    image: mongo:latest # You can use any version you prefer
    container_name: mongo
    # ports:
    #   - "27017:27017"
    networks:
      - default
        # environment:
        #   MONGO_INITDB_ROOT_USERNAME: root
        #   MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 3s
      timeout: 2s
      retries: 5
      start_period: 5s
    restart: unless-stopped

  rasp-designer-fe:
    image: 172.16.202.56:5000/rasp-designer-fe:dev
    container_name: rasp-designer-fe
    ports:
      - "80:80"
    depends_on:
      - keycloak
      - rasp-designer-be
    restart: unless-stopped

  rasp-designer-be:
    image: 172.16.202.56:5000/rasp-designer-be:latest
    container_name: rasp-designer-be
    ports:
      - "9000:8000"
    environment:
      - DATABASE_URL=mysql://root:root@mysql:3306/visual_app_design
      - KEYCLOAK_URL=http://localhost:9080
      - KEYCLOAK_SERVICE_URL=http://keycloak:8080
      - REALM=myRealm
      - CLIENT_ID=adi-rest-api
      - CLIENT_SECRET=RnxVQ0TTbwETlZeN7k3lXZB78fFUt0sF
      - REDIRECT_CALLBACK_HOST=http://localhost:9000
      - FRONTEND_PORT=80
      - FRONTEND_URL=http://localhost
      - NODE_ENV=development
      - COOKIE_DOMAIN=.localhost
      - API_HOSTNAME=rasp-rbac
      - API_PORT=8082
      # ! NEVER PROVIDE THIS IN PROD AS it makes TLS connections and HTTPS requests insecure by disabling certificate verification.
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    # Login flow
    # /login (backend) -> keycloak -> auth/callback (backend) -> frontend
    depends_on:
      keycloak:
        condition: service_started
      mysql:
        condition: service_healthy
      rasp-rbac:
        condition: service_started
    restart: unless-stopped

  rasp-rbac:
    image: 172.16.202.56:5000/rasp-rbac:latest
    container_name: rasp-rbac
    ports:
      - "9082:8082"
    entrypoint: [ "sh", "-c", "sleep 90 && exec java -jar app.jar" ]
    networks:
      - default
    environment:
      - CLIENT_ID=adi-rest-api
      - CLIENT_SECRET=RnxVQ0TTbwETlZeN7k3lXZB78fFUt0sF
      - DEMO_RASP_BACKEND=/app
      - DMS_HOST=https://rasp-dms.localhost
      - DMS_PORT=443
      - FRONTEND_URL=http://localhost:80
      # TODO: check if this is only for fetch calls or also to redirect frontend to keycloak
      # - KEYCLOAK_HOST=http://localhost:9080
      - KEYCLOAK_HOST=http://keycloak:8080
      - KEYCLOAK_PORT=443
      - RASP_GENERATED_PROJECT=/app/target/
      - REALM=myRealm
      - SERVER_HOST=http://localhost
      - SERVER_PORT=8082
      - DB_SERVER=mongo
      - DB_PORT=27017
    depends_on:
      mongo:
        condition: service_healthy
      # keycloak:
      #   condition: service_healthy
    restart: unless-stopped

volumes:
  mysql_data:
  postgres_data:
  mongo_data:
