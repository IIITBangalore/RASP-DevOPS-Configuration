services:
  keycloakdb:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_db_user
      POSTGRES_PASSWORD: keycloak_db_user_password

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev --import-realm --proxy-headers xforwarded # proxy headers to allow request to pass through traefik
    # ports:
    #   - "4000:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak_db
      KC_DB_USERNAME: keycloak_db_user
      KC_DB_PASSWORD: keycloak_db_user_password
      KC_HOSTNAME: keycloak.roh.it.com # <-- set this to your domain
    depends_on:
      - keycloakdb
    volumes:
      - ./keycloak_realm_data:/opt/keycloak/data/import
    networks:
      - traefik-reverse-proxy
      - default
    labels:
      - traefik.enable=true
      - traefik.http.routers.keycloak-https.tls=true
      - traefik.http.routers.keycloak-https.tls.certresolver=cloudflare
      - traefik.http.routers.keycloak-https.entrypoints=websecure
      - traefik.http.routers.keycloak-https.rule=Host(`keycloak.roh.it.com`)
      - traefik.http.services.keycloak-https.loadbalancer.server.port=8080

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: visual_app_design
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql

  mongo:
    image: mongo:latest # You can use any version you prefer
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - default
        # environment:
        #   MONGO_INITDB_ROOT_USERNAME: root
        #   MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db

  rasp-designer-fe:
    image: 172.16.202.56:5000/rasp-designer-fe:latest
    container_name: rasp-designer-fe
    # ports:
    #   - "80:80"
    # env_file:
    #   - ./rasp-fe/Drag-Drop(RFE)/.env
    depends_on:
      - keycloak
      - rasp-designer-be
    networks:
      - traefik-reverse-proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.rasp-fe-https.tls=true
      - traefik.http.routers.rasp-fe-https.tls.certresolver=cloudflare
      - traefik.http.routers.rasp-fe-https.entrypoints=websecure
      - traefik.http.routers.rasp-fe-https.rule=Host(`rasp-fe.roh.it.com`)
      - traefik.http.services.rasp-fe-https.loadbalancer.server.port=80

  rasp-designer-be:
    image: 172.16.202.56:5000/rasp-designer-be:latest
    container_name: rasp-designer-be
    # ports:
    #   - "8000:8000"
    env_file:
      - ./rasp-fe/Drag-Drop(RBE)/.env.example
    depends_on:
      - keycloak
      - mysql
      - rasp-rbac
    networks:
      - traefik-reverse-proxy
      - default
    labels:
      - traefik.enable=true
      - traefik.http.routers.rasp-be-https.tls=true
      - traefik.http.routers.rasp-be-https.tls.certresolver=cloudflare
      - traefik.http.routers.rasp-be-https.entrypoints=websecure
      - traefik.http.routers.rasp-be-https.rule=Host(`rasp-be.roh.it.com`)
      - traefik.http.services.rasp-be-https.loadbalancer.server.port=8000

  rasp-rbac:
    image: 172.16.202.56:5000/rasp-rbac:latest
    container_name: rasp-rbac
    # ports:
    #   - "8082:8082"
    networks:
      - default
    env_file:
      - ./RASP-RBAC/.env
    depends_on:
      - mongo

  # twingate-jenkins-rasp:
  #   image: twingate/connector:1
  #   container_name: twingate-jenkins-rasp
  #   restart: unless-stopped
  #   pull_policy: always
  #   sysctls:
  #     net.ipv4.ping_group_range: "0 2147483647"
  #   environment:
  #     TWINGATE_NETWORK: "rlshah03"
  #     TWINGATE_ACCESS_TOKEN: "${TWINGATE_ACCESS_TOKEN}"
  #     TWINGATE_REFRESH_TOKEN: "${TWINGATE_REFRESH_TOKEN}"
  #     TWINGATE_LABEL_HOSTNAME: "`hostname`"
  #     TWINGATE_LABEL_DEPLOYED_BY: "docker"

  traefik:
    image: docker.io/library/traefik:v3.5.1
    container_name: traefik
    ports:
      - 80:80
      - 443:443
      # --> (Optional) Enable Dashboard, don't do in production
      - 8008:8080
      # <--
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/:/etc/traefik/:ro
      - ./certs/:/var/traefik/certs/:rw
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN} # <-- Change this to your Cloudflare API Token
    networks:
      - traefik-reverse-proxy
    restart: unless-stopped

volumes:
  mysql_data:
  postgres_data:
  mongo_data:


networks:
  traefik-reverse-proxy:
    external: true # <-- (Optional) Change this to false if you want to create a new network
